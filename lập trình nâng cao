#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<Windows.h>
struct book_st
{
	char TacGia[30];
	char TenSach[30];
	char theloai[30];
	int giatien;
	int STT;
}; 
void set_color (int );
typedef struct book_st bookList;
void set_color ( int code ) {
    HANDLE color = GetStdHandle(STD_OUTPUT_HANDLE);
    SetConsoleTextAttribute( color , code );
}
void Nhap(bookList &a)
{
	printf("\nNhap ten sach: ");
	fflush(stdin);
	gets(a.TenSach);
	printf("Nhap ten tac gia: ");
	fflush(stdin);
	gets(a.TacGia);
	printf("Nhap the loai: ");
	fflush(stdin);
	gets(a.theloai);
	printf("Nhap gia tien: ");
	scanf("%d",&a.giatien);
}
void Nhap_(bookList *&a, int &n)
{	
    if(n==0)
	{
	 	a=(bookList*)malloc(sizeof(bookList));
	} 
	else
	{
	   realloc(a,(n+1)*sizeof(bookList));	
	}  
	printf("\nNhap cuon sach thu %d",n+1);
	Nhap(a[n]);
	a[n].STT=n+1;
	n++;	
}
void SapXep(bookList *a, int n)
{
	for(int i=0; i<n-1;i++)
	{
		for(int j=i+1;j<n;j++)
		{
			if(strcmp(a[i].theloai,a[j].theloai)<0)
			{
				bookList dem= a[i];
				a[i] = a[j];
				a[j] = dem;
			}
		}
	}
}
void ThongKe(bookList *a, int n)
{
	SapXep(a,n);
	int kt=0;
	for(int i= kt; i<n; i= kt)
	{
		int dem = 1;
		for(int j = kt+1; j<n; j++)
		{
			if(strcmp(a[i].theloai,a[j].theloai)== 0)
			{
				dem++;
			}
			else
			{
				break;
			}
		}
		if(dem>0)
		{
		   printf("\nThe loai %s co %d quyen",a[kt].theloai,dem);
		   kt =kt + dem;	
		}
	}
	
}
void inhang(int n)
{
	printf("\n");
	for(int i=1; i<=n; i++)
	{
		printf("=");
	}
}
void Xuat(bookList a, int i)
{
	inhang(100);
	printf("\n00%d",i+1);
	printf("||%-15s",a.TenSach);
	printf("||%-20s",a.TacGia);
	printf("||%-15s",a.theloai);
	printf("||%d",a.giatien);
}
void Xuat_(bookList *a, int n)
{
	ThongKe(a,n);
	printf("\n%s||%-20s%-25s%-20s%s","STT","Ten Sach","Ten Tac Gia","The Loai","Gia Tien");
	for(int i=0; i<n; i++)
	{
		Xuat(a[i],i);
	}
}
void TimKiem(bookList *a, int n)
{
	char ten[30];
	int kt=1;
	printf("\nNhap The Loai Sach Can Tim: ");
	fflush(stdin);
	gets(ten);
	printf("\n%s||%-20s%-25s%-20s%s","STT","Ten Sach","Ten Tac Gia","The Loai","Gia Tien");
	for(int i= 0; i<n; i++)
	{
		if(strcmp(a[i].theloai,ten)==0)
		{
				Xuat(a[i],i);
				kt=0;
		}
	}
	if(kt)
	{
		printf("\nKhong co quyen sach thuoc the loai %s trong du lieu",ten);
	}
}
void Xoa(bookList *&a, int &n)
{
	int stt;
	Xuat_(a,n);
    do
	{
		printf("\nNhap so thu tu cua quyen sach can xoa: ");
		scanf("%d",&stt);
		if(stt <1 || stt > n)
		{
			printf("\nVi tri xoa can nam trong doan thu tu [1;%d]",n);
		}
	}while(stt <1 || stt > n);
	stt--;
    for(int i= stt+1; i<n; i++)
	{
		   a[i-1]=a[i];
	}
     n--;
	realloc(a,n*sizeof(bookList));
}
void Them(bookList *&a, int &n)
{
	int stt;
	bookList b ;
	Xuat_(a,n);
	do
	{
		printf("\nNhap so thu tu cua quyen sach can them: ");
		scanf("%d",&stt);
		if(stt < 1 || stt > n+1)
		{
			printf("\nVi tri them can nam trong doan thu tu [1;%d]",n+1);
		}
	}while(stt<1 || stt >n+1);
	stt--;
	printf("\nNhap thong tin quyen sach can them:");
	Nhap(b);
	realloc(a,(n+1)*sizeof(bookList));
	for(int i=n-1; i>= stt; i--)
	{
		a[i+1] = a[i];
	}
    a[stt]=b;
	n++;
}
void CapNhat(bookList *&a, int n)
{
	int stt;
	do
	{
		printf("\nNhap so thu tu cua quyen sach can cap nhat: ");
		scanf("%d",&stt);
		if(stt <1 || stt > n)
		{
			printf("\nVi tri cap nhat can nam trong doan thu tu [1;%d]",n);
		}
	}while(stt <1 || stt > n);
	stt--;
	for(int i=0; i<n; i++)
	{
		if(stt==i)
		{
			Nhap(a[i]);
			return;
		}
	}
}
void GhiTiep(bookList *a, int n)
{
	FILE *cfPtr;
	cfPtr = fopen("book.dat","wb");
	rewind(cfPtr);
	for(int i=0; i<n ; i++)
	{
		fwrite(&a[i],sizeof(bookList),1,cfPtr);
	}
	fclose(cfPtr);
}
void textFile(FILE *readPtr)
{
	FILE *writePtr;
	int result;
	bookList a;
	writePtr = fopen("book.txt","w");
	rewind(readPtr);
	fprintf(writePtr,"\n%s||%-15s%-20s%-15s%s","STT","Ten Sach","Ten Tac Gia","The Loai","Gia Tien");
	while(!feof(readPtr))
	{
		result = fread(&a,sizeof(bookList),1,readPtr);
		if(result != 0 && a.STT !=0)
		{
			fprintf(writePtr,"\n00%d||%-15s||%-20s||%-15s||%d",a.STT,a.TenSach,a.TacGia,a.theloai,a.giatien);
		}
	}
	fclose(writePtr);
}
